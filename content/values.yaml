# Default values for ch5.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 7

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount: 
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  #automount: true
  # Annotations to add to the service account
  #annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "null"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  #tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

####################################
# 0. Obtener un Helm Chart de prueba
# Desde el archivo values.yaml se debe poder configurar:
# - Resource requests de CPU y Memoria para algún contenedor o pod de la $aplicación.
# - Passwords o credenciales cuyas llaves tengan el siguiente formato:
#       *password, *pwd, *pass o *credentials. Por lo menos uno de estos valores
#       son renderizados directamente en las variables de entorno de los contenedores 
#       (pod.spec.containers[].env), sin utilizar secrets

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

####################################

livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: []

tolerations: []

affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
            - key: "kubernetes.io/hostname"
              operator: In
              values:
                - "{{ .Values.nodeAffinity.node }}"
        weight: 100

nodeAffinity: 
  node: ""
  #node: ${NODE_AFFINITY_NODE}
